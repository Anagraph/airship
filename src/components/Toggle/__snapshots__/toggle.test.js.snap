// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`render renders with checked param 1`] = `
.c1 {
  display: inline-block;
  position: relative;
}

.c1,
.c1:after,
.c1:before,
.c1 *,
.c1 *:after,
.c1 *:before {
  box-sizing: border-box;
}

.c1 svg {
  opacity: 0;
  position: absolute;
  left: 4px;
  top: 4px;
  -webkit-transition: opacity 0.2s ease;
  transition: opacity 0.2s ease;
  pointer-events: none;
}

.c1 input:checked ~ svg {
  opacity: 1;
}

.c1 input {
  border: 0;
  -webkit-clip: rect(0 0 0 0);
  clip: rect(0 0 0 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px;
}

.c1 input + label {
  width: 32px;
  height: 16px;
  outline: 0;
  display: block;
  position: relative;
  cursor: pointer;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  background: #D1D5D7;
  border-radius: 40px;
  -webkit-transition: all 0.4s ease;
  transition: all 0.4s ease;
}

.c1 input + label::after {
  position: relative;
  display: block;
  content: '';
  width: 12px;
  height: 12px;
  top: 2px;
}

.c1 input + label::after {
  border-radius: 50%;
  background: #fff;
  -webkit-transition: all 0.2s ease;
  transition: all 0.2s ease;
  -webkit-transform: translateX(2px);
  -ms-transform: translateX(2px);
  transform: translateX(2px);
}

.c1 label:hover {
  background: #47DB99;
}

.c1 input[disabled] + label {
  cursor: not-allowed;
  background: #F5F5F5;
  box-shadow: inset 0 0 0 1px #E2E6E3;
}

.c1 input[disabled] + label:after {
  background: #D1D5D7;
}

.c1 input:checked + label:hover,
.c1 input:checked + label {
  background: #1785FB;
}

.c1 input:checked + label::after {
  -webkit-transform: translateX(18px);
  -ms-transform: translateX(18px);
  transform: translateX(18px);
}

.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c2 {
  margin-left: 8px;
}

<div
  className="c0"
>
  <div
    className="c1"
  >
    <input
      checked={true}
      disabled={null}
      id="foo"
      onChange={[Function]}
      type="checkbox"
    />
    <label
      htmlFor="foo"
    />
    <svg
      height="8"
      width="10"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M3.315 7.858L.133 4.441a.506.506 0 0 1 0-.683l.643-.684a.437.437 0 0 1 .642 0l2.219 2.393L8.58.141a.437.437 0 0 1 .643 0l.643.683a.504.504 0 0 1 0 .683l-5.91 6.35a.437.437 0 0 1-.642 0"
        fill="#FFF"
        fillRule="evenodd"
      />
    </svg>
  </div>
  <div
    className="c2"
  />
</div>
`;

exports[`render renders without crashing 1`] = `
.c1 {
  display: inline-block;
  position: relative;
}

.c1,
.c1:after,
.c1:before,
.c1 *,
.c1 *:after,
.c1 *:before {
  box-sizing: border-box;
}

.c1 svg {
  opacity: 0;
  position: absolute;
  left: 4px;
  top: 4px;
  -webkit-transition: opacity 0.2s ease;
  transition: opacity 0.2s ease;
  pointer-events: none;
}

.c1 input:checked ~ svg {
  opacity: 1;
}

.c1 input {
  border: 0;
  -webkit-clip: rect(0 0 0 0);
  clip: rect(0 0 0 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px;
}

.c1 input + label {
  width: 32px;
  height: 16px;
  outline: 0;
  display: block;
  position: relative;
  cursor: pointer;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  background: #D1D5D7;
  border-radius: 40px;
  -webkit-transition: all 0.4s ease;
  transition: all 0.4s ease;
}

.c1 input + label::after {
  position: relative;
  display: block;
  content: '';
  width: 12px;
  height: 12px;
  top: 2px;
}

.c1 input + label::after {
  border-radius: 50%;
  background: #fff;
  -webkit-transition: all 0.2s ease;
  transition: all 0.2s ease;
  -webkit-transform: translateX(2px);
  -ms-transform: translateX(2px);
  transform: translateX(2px);
}

.c1 label:hover {
  background: #47DB99;
}

.c1 input[disabled] + label {
  cursor: not-allowed;
  background: #F5F5F5;
  box-shadow: inset 0 0 0 1px #E2E6E3;
}

.c1 input[disabled] + label:after {
  background: #D1D5D7;
}

.c1 input:checked + label:hover,
.c1 input:checked + label {
  background: #1785FB;
}

.c1 input:checked + label::after {
  -webkit-transform: translateX(18px);
  -ms-transform: translateX(18px);
  transform: translateX(18px);
}

.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c2 {
  margin-left: 8px;
}

<div
  className="c0"
>
  <div
    className="c1"
  >
    <input
      checked={false}
      disabled={null}
      id="foo"
      onChange={[Function]}
      type="checkbox"
    />
    <label
      htmlFor="foo"
    />
    <svg
      height="8"
      width="10"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M3.315 7.858L.133 4.441a.506.506 0 0 1 0-.683l.643-.684a.437.437 0 0 1 .642 0l2.219 2.393L8.58.141a.437.437 0 0 1 .643 0l.643.683a.504.504 0 0 1 0 .683l-5.91 6.35a.437.437 0 0 1-.642 0"
        fill="#FFF"
        fillRule="evenodd"
      />
    </svg>
  </div>
  <div
    className="c2"
  />
</div>
`;
